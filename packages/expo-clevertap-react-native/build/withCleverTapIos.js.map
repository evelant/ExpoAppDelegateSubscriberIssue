{"version":3,"file":"withCleverTapIos.js","sourceRoot":"","sources":["../src/withCleverTapIos.ts"],"names":[],"mappings":";;;AAAA,yDAAsE;AAS/D,MAAM,gBAAgB,GAA6B,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;IACvE,sBAAsB;IACtB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;QACb,MAAM,CAAC,GAAG,GAAG,EAAE,CAAA;KAClB;IAED,MAAM,EAAE,kBAAkB,EAAE,cAAc,EAAE,mBAAmB,EAAE,GAAG,IAAI,CAAA;IACxE,IAAI,CAAC,kBAAkB,EAAE;QACrB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;KACtD;IACD,IAAI,CAAC,cAAc,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;KACjD;IACD,IAAI,CAAC,mBAAmB,EAAE;QACtB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;KACvD;IAED,+FAA+F;IAC/F,MAAM,GAAG,IAAA,8BAAa,EAAC,MAAM,EAAE,CAAC,MAAM,EAAE,EAAE;QACtC,MAAM,CAAC,UAAU,GAAG;YAChB,GAAG,MAAM,CAAC,UAAU;YACpB,kBAAkB,EAAE,kBAAkB;YACtC,cAAc,EAAE,cAAc;YAC9B,eAAe,EAAE,mBAAmB;SACvC,CAAA;QAED,OAAO,MAAM,CAAA;IACjB,CAAC,CAAC,CAAA;IAEF,iHAAiH;IACjH,sCAAsC;IACtC,aAAa;IACb,0BAA0B;IAC1B,uFAAuF;IACvF,gEAAgE;IAChE,EAAE;IACF,wCAAwC;IACxC,6CAA6C;IAC7C,6BAA6B;IAC7B,wKAAwK;IACxK,4CAA4C;IAC5C,yBAAyB;IACzB,4BAA4B;IAC5B,aAAa;IACb,oCAAoC;IACpC,oCAAoC;IACpC,qCAAqC;IACrC,qFAAqF;IACrF,4CAA4C;IAC5C,yBAAyB;IACzB,4BAA4B;IAC5B,aAAa;IACb,yDAAyD;IACzD,wBAAwB;IACxB,SAAS;IACT,KAAK;IAEL,OAAO,MAAM,CAAA;AACjB,CAAC,CAAA;AA1DY,QAAA,gBAAgB,oBA0D5B","sourcesContent":["import { withDangerousMod, withInfoPlist } from \"@expo/config-plugins\"\nimport type { ConfigPlugin, InfoPlist } from \"@expo/config-plugins\"\nimport type { ExpoConfig } from \"@expo/config-types\"\nimport fs from \"fs-extra\"\nimport path from \"path\"\n\nimport type { ConfigData } from \"./types\"\nimport { mergeContents } from \"@expo/config-plugins/build/utils/generateCode\"\n\nexport const withCleverTapIOS: ConfigPlugin<ConfigData> = (config, data) => {\n    // Ensure object exist\n    if (!config.ios) {\n        config.ios = {}\n    }\n\n    const { cleverTapAccountId, cleverTapToken, cleverTapRegionCode } = data\n    if (!cleverTapAccountId) {\n        throw new Error(\"CleverTap account ID is required\")\n    }\n    if (!cleverTapToken) {\n        throw new Error(\"CleverTap token is required\")\n    }\n    if (!cleverTapRegionCode) {\n        throw new Error(\"CleverTap region code is required\")\n    }\n\n    // Update the infoPlist with the CleverTap accountId, token, region code, and google ads config\n    config = withInfoPlist(config, (config) => {\n        config.modResults = {\n            ...config.modResults,\n            CleverTapAccountId: cleverTapAccountId,\n            CleverTapToken: cleverTapToken,\n            CleverTapRegion: cleverTapRegionCode,\n        }\n\n        return config\n    })\n\n    // Without this dangerous mod build will fail because Expo AppDelegate subscribers don't support objective c deps\n    // config = withDangerousMod(config, [\n    //     \"ios\",\n    //     async (config) => {\n    //         const filePath = path.join(config.modRequest.platformProjectRoot, \"Podfile\")\n    //         const contents = await fs.readFile(filePath, \"utf-8\")\n    //\n    //         let results = mergeContents({\n    //             tag: \"clevertap-react-native\",\n    //             src: contents,\n    //             newSrc: `pod 'clevertap-react-native', :path => '${config.modRequest.projectRoot}/../../node_modules/clevertap-react-native/', :modular_headers => true`,\n    //             anchor: /use_native_modules/,\n    //             offset: 0,\n    //             comment: \"#\",\n    //         })\n    //         results = mergeContents({\n    //             tag: \"clevertap-ios\",\n    //             src: results.contents,\n    //             newSrc: `pod 'CleverTap-iOS-SDK', '=4.0.0', :modular_headers => true`,\n    //             anchor: /use_native_modules/,\n    //             offset: 0,\n    //             comment: \"#\",\n    //         })\n    //         await fs.writeFile(filePath, results.contents)\n    //         return config\n    //     },\n    // ])\n\n    return config\n}\n"]}